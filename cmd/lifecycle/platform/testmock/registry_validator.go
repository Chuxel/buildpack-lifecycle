// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/buildpacks/lifecycle/cmd/lifecycle/platform (interfaces: RegistryValidator)

// Package testmock is a generated GoMock package.
package testmock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRegistryValidator is a mock of RegistryValidator interface.
type MockRegistryValidator struct {
	ctrl     *gomock.Controller
	recorder *MockRegistryValidatorMockRecorder
}

// MockRegistryValidatorMockRecorder is the mock recorder for MockRegistryValidator.
type MockRegistryValidatorMockRecorder struct {
	mock *MockRegistryValidator
}

// NewMockRegistryValidator creates a new mock instance.
func NewMockRegistryValidator(ctrl *gomock.Controller) *MockRegistryValidator {
	mock := &MockRegistryValidator{ctrl: ctrl}
	mock.recorder = &MockRegistryValidatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRegistryValidator) EXPECT() *MockRegistryValidatorMockRecorder {
	return m.recorder
}

// ValidateReadAccess mocks base method.
func (m *MockRegistryValidator) ValidateReadAccess(arg0 []string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateReadAccess", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateReadAccess indicates an expected call of ValidateReadAccess.
func (mr *MockRegistryValidatorMockRecorder) ValidateReadAccess(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateReadAccess", reflect.TypeOf((*MockRegistryValidator)(nil).ValidateReadAccess), arg0)
}

// ValidateWriteAccess mocks base method.
func (m *MockRegistryValidator) ValidateWriteAccess(arg0 []string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateWriteAccess", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateWriteAccess indicates an expected call of ValidateWriteAccess.
func (mr *MockRegistryValidatorMockRecorder) ValidateWriteAccess(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateWriteAccess", reflect.TypeOf((*MockRegistryValidator)(nil).ValidateWriteAccess), arg0)
}
